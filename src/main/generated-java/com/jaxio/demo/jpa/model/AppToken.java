/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-MyCelerioPack:springboot/src/main/java/jpa/model/Entity.e.vm.java
 */
package com.jaxio.demo.jpa.model;

import static javax.persistence.GenerationType.IDENTITY;
import static javax.persistence.TemporalType.TIMESTAMP;

import java.io.Serializable;
import java.util.Date;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.MoreObjects;
import com.jaxio.demo.jpa.model.support.IdentifiableHashBuilder;
import com.jaxio.jpa.querybyexample.Identifiable;

@Entity
@Table(name = "APP_TOKEN")

// elastic search index must be lowercase
@org.springframework.data.elasticsearch.annotations.Document(indexName = "apptoken")
public class AppToken implements Identifiable<String>, Serializable {

    private static final long serialVersionUID = 1L;

    private static final Logger log = Logger.getLogger(AppToken.class.getName());

    // Raw attributes
    private String id;
    private String tokenValue;
    private Date tokenCreationDate;
    private String ipAddress;
    private String userAgent;
    private String userLogin;

    @Override
    public String entityClassName() {
        return AppToken.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "SERIES", length = 50)
    @GeneratedValue(strategy = IDENTITY)
    @Id
    public String getId() {
        return id;
    }

    @Override
    public void setId(String id) {
        this.id = id;
    }

    public AppToken id(String id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null && !id.isEmpty();
    }
    // -- [tokenValue] ------------------------

    @Size(max = 50)
    @Column(name = "TOKEN_VALUE", length = 50)
    public String getTokenValue() {
        return tokenValue;
    }

    public void setTokenValue(String tokenValue) {
        this.tokenValue = tokenValue;
    }

    public AppToken tokenValue(String tokenValue) {
        setTokenValue(tokenValue);
        return this;
    }
    // -- [tokenCreationDate] ------------------------

    @Column(name = "TOKEN_CREATION_DATE", length = 23)
    @Temporal(TIMESTAMP)
    public Date getTokenCreationDate() {
        return tokenCreationDate;
    }

    public void setTokenCreationDate(Date tokenCreationDate) {
        this.tokenCreationDate = tokenCreationDate;
    }

    public AppToken tokenCreationDate(Date tokenCreationDate) {
        setTokenCreationDate(tokenCreationDate);
        return this;
    }
    // -- [ipAddress] ------------------------

    @NotEmpty
    @Size(max = 250)
    @Column(name = "IP_ADDRESS", nullable = false, length = 250)
    public String getIpAddress() {
        return ipAddress;
    }

    public void setIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
    }

    public AppToken ipAddress(String ipAddress) {
        setIpAddress(ipAddress);
        return this;
    }
    // -- [userAgent] ------------------------

    @NotEmpty
    @Size(max = 250)
    @Column(name = "USER_AGENT", nullable = false, length = 250)
    public String getUserAgent() {
        return userAgent;
    }

    public void setUserAgent(String userAgent) {
        this.userAgent = userAgent;
    }

    public AppToken userAgent(String userAgent) {
        setUserAgent(userAgent);
        return this;
    }
    // -- [userLogin] ------------------------

    @NotEmpty
    @Size(max = 250)
    @Column(name = "USER_LOGIN", nullable = false, length = 250)
    public String getUserLogin() {
        return userLogin;
    }

    public void setUserLogin(String userLogin) {
        this.userLogin = userLogin;
    }

    public AppToken userLogin(String userLogin) {
        setUserLogin(userLogin);
        return this;
    }

    /**
     * Apply the default values.
     */
    public AppToken withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof AppToken && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this AppToken instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("tokenValue", getTokenValue()) //
                .add("tokenCreationDate", getTokenCreationDate()) //
                .add("ipAddress", getIpAddress()) //
                .add("userAgent", getUserAgent()) //
                .add("userLogin", getUserLogin()) //
                .toString();
    }
}
/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-MyCelerioPack:springboot/src/main/java/jpa/model/Entity.e.vm.java
 */
package com.jaxio.demo.jpa.model;

import static javax.persistence.TemporalType.TIMESTAMP;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.logging.Logger;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.validation.constraints.Digits;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.validator.constraints.NotEmpty;

import com.google.common.base.MoreObjects;
import com.jaxio.demo.jpa.model.support.IdentifiableHashBuilder;
import com.jaxio.jpa.querybyexample.Identifiable;

@Entity
@Table(name = "BOOK")

// elastic search index must be lowercase
@org.springframework.data.elasticsearch.annotations.Document(indexName = "book")
public class Book implements Identifiable<String>, Serializable {

    private static final long serialVersionUID = 1L;

    private static final Logger log = Logger.getLogger(Book.class.getName());

    // Raw attributes
    private String id;
    private String title;
    private String description;
    private Date publicationDate;
    private Integer authorId;
    private BigDecimal price;
    private Integer barcodeid;

    @Override
    public String entityClassName() {
        return Book.class.getSimpleName();
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "ID", length = 36)
    @GeneratedValue(generator = "strategy-uuid2")
    @GenericGenerator(name = "strategy-uuid2", strategy = "uuid2")
    @Id
    public String getId() {
        return id;
    }

    @Override
    public void setId(String id) {
        this.id = id;
    }

    public Book id(String id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null && !id.isEmpty();
    }
    // -- [title] ------------------------

    @NotEmpty
    @Size(max = 100)
    @Column(name = "TITLE", nullable = false, length = 100)
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Book title(String title) {
        setTitle(title);
        return this;
    }
    // -- [description] ------------------------

    @NotEmpty
    @Size(max = 255)
    @Column(name = "DESCRIPTION", nullable = false)
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Book description(String description) {
        setDescription(description);
        return this;
    }
    // -- [publicationDate] ------------------------

    @Column(name = "PUBLICATION_DATE", length = 23)
    @Temporal(TIMESTAMP)
    public Date getPublicationDate() {
        return publicationDate;
    }

    public void setPublicationDate(Date publicationDate) {
        this.publicationDate = publicationDate;
    }

    public Book publicationDate(Date publicationDate) {
        setPublicationDate(publicationDate);
        return this;
    }
    // -- [authorId] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "AUTHOR_ID", precision = 10)
    public Integer getAuthorId() {
        return authorId;
    }

    public void setAuthorId(Integer authorId) {
        this.authorId = authorId;
    }

    public Book authorId(Integer authorId) {
        setAuthorId(authorId);
        return this;
    }
    // -- [price] ------------------------

    @Digits(integer = 18, fraction = 2)
    @NotNull
    @Column(name = "PRICE", nullable = false, precision = 20, scale = 2)
    public BigDecimal getPrice() {
        return price;
    }

    public void setPrice(BigDecimal price) {
        this.price = price;
    }

    public Book price(BigDecimal price) {
        setPrice(price);
        return this;
    }
    // -- [barcodeid] ------------------------

    @Digits(integer = 10, fraction = 0)
    @Column(name = "BARCODEID", precision = 10)
    public Integer getBarcodeid() {
        return barcodeid;
    }

    public void setBarcodeid(Integer barcodeid) {
        this.barcodeid = barcodeid;
    }

    public Book barcodeid(Integer barcodeid) {
        setBarcodeid(barcodeid);
        return this;
    }

    /**
     * Apply the default values.
     */
    public Book withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Book && hashCode() == other.hashCode());
    }

    private IdentifiableHashBuilder identifiableHashBuilder = new IdentifiableHashBuilder();

    @Override
    public int hashCode() {
        return identifiableHashBuilder.hash(log, this);
    }

    /**
     * Construct a readable string representation for this Book instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this) //
                .add("id", getId()) //
                .add("title", getTitle()) //
                .add("description", getDescription()) //
                .add("publicationDate", getPublicationDate()) //
                .add("authorId", getAuthorId()) //
                .add("price", getPrice()) //
                .add("barcodeid", getBarcodeid()) //
                .toString();
    }
}